#DEFINE XR_ROM_START 0xFFFE0000

PrintAddr : ^UBYTE = CAST 0xF80003FC TO ^UBYTE
ExitAddr : ^UWORD = CAST 0xF80003F8 TO ^UWORD

HexLut : UBYTE[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'}

EXTERN FN TestMain () : UWORD
EXTERN _data : UBYTE
EXTERN _data_size : UBYTE
EXTERN _text_size : UBYTE

FN SetupAndMain() : UWORD

    dst := &_data
    src := &_text_size + XR_ROM_START
    cnt := CAST &_data_size TO UWORD
    WHILE cnt > 0 DO
        dst^ = src^
        dst += 1
        src += 1
        cnt -= 1
    END

    RETURN TestMain()
END

FN SimPutc (
    IN char : UBYTE
)
    adj := CAST &PrintAddr TO ^^UWORD
    adj^^ = char
END

FN SimPuts (
    IN str : ^UBYTE
)
    WHILE str^ != 0 DO
        PrintAddr^ = str^
        str += 1
    END
END

FN PrintNum(
    IN x: UWORD
)
    SimPutc('0')
    SimPutc('x')
    SimPutc(0x30 + ((x >> 4) & 0xF))
    SimPutc(0x30 + (x & 0xF))
    SimPutc(0xA)
END

FN PrintNumFull(
    IN x: UWORD
)
    i := 1
    WHILE (i < 9) DO
        SimPutc((HexLut[0xF & (x >> (32 - (i << 2)))]))
        i += 1
    END
    SimPutc('\n')
END

FN SimExit ( 
    IN code : UWORD
)
    adj := CAST &ExitAddr  TO ^^UWORD
    adj^^ = code
END

FN ExceptionCrash (
    IN ecause: UWORD
)
    SimPuts("ECAUSE=")
    PrintNum(ecause)
    SimExit(1)
END

FN SoftMul(
    IN x : UWORD,
    IN y : UWORD
) : UWORD
    ret := 0
    i := 0
    WHILE i < 32 DO
        IF ((y >> i) & 1) == 1 THEN
            ret += (x << i)
        END
        i += 1
    END
    RETURN ret
END